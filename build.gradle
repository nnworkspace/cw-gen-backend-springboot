plugins {
    id 'org.springframework.boot' version '2.3.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id "org.openapi.generator" version "4.3.1"
    id 'java'
    id 'idea'
}

group 'org.ningning.sniff'
version '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

bootJar {
    mainClassName = 'org.ningning.crossword_gen.WordpuzzleApplication'
    // baseName = 'cw-gen-rest-serice'
    // version =  '0.0.5'
}

dependencies {
    compile 'com.google.guava:guava:29.0-jre'
    compile 'org.apache.commons:commons-math3:3.6.1'
    compile 'org.springframework.boot:spring-boot-starter-web'
    
    //testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.2'
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.2'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
}

println '################## project path: ################'
println  "Root project:   ${project.rootProject}"
println  "  rootDir:      ${project.rootDir}"
println  "  projectDir:   ${project.projectDir}"

def apiSrcPath = "${project.projectDir}/libs/crossword-gen-api/src/main/api".toString()
// def apiSrcPath = "../crossword-gen-api/src/main/api".toString()
def destPath = "${project.buildDir}".toString()
def apiDoc = 'crossword-gen-api.yaml'
def inputFileUri = "$apiSrcPath/$apiDoc".toString()

openApiValidate {
    inputSpec = inputFileUri
}

// call this task to generate Spring Server stub
openApiGenerate {
    generatorName = "spring"
    inputSpec = inputFileUri
    outputDir = "$destPath/server-spring-boot".toString()
    apiPackage = "${project.group}.rest".toString()
    modelPackage = "${project.group}.model".toString()
    configOptions = [ dateLibrary: "java8" ]
}

// call this to generate all
task codegen(dependsOn: ['openApiValidate',
                         'openApiGenerate'
//                         'buildSpringServerStub',
//                         'buildAngularClient'
])



// ################### below was copied from the crossword-gen core project, not useful here
// ########################## but I still keep it know how to test ....
//test {
//    useJUnitPlatform()
//}

def dictPath = 'src/main/resources/german/german.dic'

task runApp(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'org.ningning.codefu.crossword_gen.Runner'

    // arguments to pass to the application
    args dictPath, 20, 20, 0.875, 5
}


